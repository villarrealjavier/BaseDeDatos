--ALTER SESSION SET "_oracle_script"=TRUE;
--CREATE USER BOLETIN3PSQL IDENTIFIED BY BOLETIN3PSQL;
--GRANT CONNECT, RESOURCE, DBA TO BOLETIN3PSQL;



CREATE TABLE EMP(
  EMPNO     NUMBER(4) primary key,
  ENAME     VARCHAR2(10 BYTE),
  JOB       VARCHAR2(9 BYTE),
  MGR       NUMBER(4),
  HIREDATE  DATE,
  SAL       NUMBER(7,2),
  COMM      NUMBER(7,2),
  DEPTNO    NUMBER(2)
);

CREATE TABLE DEPT(
  DEPTNO  NUMBER(2) primary key,
  DNAME   VARCHAR2(14 BYTE),
  LOC     VARCHAR2(13 BYTE)
);




ALTER TABLE EMP ADD (CONSTRAINT FK_DEPTNO FOREIGN KEY (DEPTNO) REFERENCES DEPT (DEPTNO));

CREATE TABLE BONUS(
  ENAME  VARCHAR2(10 BYTE),
  JOB    VARCHAR2(9 BYTE),
  SAL    NUMBER,
  COMM   NUMBER
);

--INSERCCION DE DATOS

INSERT INTO DEPT ( DEPTNO, DNAME, LOC ) VALUES ( 
10, 'ACCOUNTING', 'NEW YORK'); 
INSERT INTO DEPT ( DEPTNO, DNAME, LOC ) VALUES ( 
20, 'RESEARCH', 'DALLAS'); 
INSERT INTO DEPT ( DEPTNO, DNAME, LOC ) VALUES ( 
30, 'SALES', 'CHICAGO'); 
INSERT INTO DEPT ( DEPTNO, DNAME, LOC ) VALUES ( 
40, 'OPERATIONS', 'BOSTON'); 

INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7369, 'SMITH', 'CLERK', 7902,  TO_Date( '12/17/1980 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 800, NULL, 20); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7499, 'ALLEN', 'SALESMAN', 7698,  TO_Date( '02/20/1981 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 1600, 300, 30); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7521, 'WARD', 'SALESMAN', 7698,  TO_Date( '02/22/1981 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 1250, 500, 30); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7566, 'JONES', 'MANAGER', 7839,  TO_Date( '04/02/1981 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 2975, NULL, 20); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7654, 'MARTIN', 'SALESMAN', 7698,  TO_Date( '09/28/1981 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 1250, 1400, 30); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7698, 'BLAKE', 'MANAGER', 7839,  TO_Date( '05/01/1981 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 2850, NULL, 30); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7782, 'CLARK', 'MANAGER', 7839,  TO_Date( '06/09/1981 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 2450, NULL, 10); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7788, 'SCOTT', 'ANALYST', 7566,  TO_Date( '04/19/1987 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 3000, NULL, 20); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7839, 'KING', 'PRESIDENT', NULL,  TO_Date( '11/17/1981 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 5000, NULL, 10); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7844, 'TURNER', 'SALESMAN', 7698,  TO_Date( '09/08/1981 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 1500, 0, 30); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7876, 'ADAMS', 'CLERK', 7788,  TO_Date( '05/23/1987 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 1100, NULL, 20); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7900, 'JAMES', 'CLERK', 7698,  TO_Date( '12/03/1981 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 950, NULL, 30); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7902, 'FORD', 'ANALYST', 7566,  TO_Date( '12/03/1981 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 3000, NULL, 20); 
INSERT INTO EMP ( EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM,
DEPTNO ) VALUES ( 
7934, 'MILLER', 'CLERK', 7782,  TO_Date( '01/23/1982 12:00:00 AM', 'MM/DD/YYYY HH:MI:SS AM')
, 1300, NULL, 10); 

--EJERCICIO 1
CREATE OR REPLACE PROCEDURE BOLETIN3PSQL.mostrarNombreYLocalidad(DEPARTAMENTO NUMBER, NOMBRE VARCHAR2)
AS 
	CURSOR C IS SELECT LOC, DNAME 
	FROM DEPT
	WHERE DEPTNO=DEPARTAMENTO
	AND DNAME= NOMBRE;
RESULTADO NUMBER:=0;
noExiste EXCEPTION;
BEGIN 
	SELECT COUNT(DNAME) INTO RESULTADO
	FROM DEPT d 
	WHERE DEPTNO=DEPARTAMENTO
	AND DNAME= NOMBRE;
	IF (RESULTADO=0) THEN
	RAISE noExiste;
	
	ELSE
	
		FOR registro IN C
		LOOP 
			
		DBMS_OUTPUT.PUT_LINE('Localidad del departamento: ' ||registro.LOC);
		DBMS_OUTPUT.PUT_LINE('Nombre del departamento: ' ||registro.DNAME);
		END LOOP;
	END IF;

	EXCEPTION
	WHEN noExiste THEN
			DBMS_OUTPUT.PUT_LINE('No existe el departamento');
	WHEN OTHERS THEN 
			DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion');
		

END;

BEGIN
	mostrarNombreYLocalidad(10,'ACCOUNTING');
END;
SELECT * FROM DEPT;

--EJERCICIO 2
CREATE OR REPLACE FUNCTION BOLETIN3PSQL.devolver_sal(NOMBRE VARCHAR2) RETURN NUMBER
IS 
	resultado_select NUMBER;
	RESULTADO NUMBER:=0;

cuenta NUMBER:=0;
noExisteDept EXCEPTION;
BEGIN 
	SELECT SUM(e.SAL) INTO resultado_select
		FROM DEPT d, EMP e
		WHERE e.DEPTNO = d.DEPTNO 
		AND d.DNAME = NOMBRE;
	
	SELECT COUNT(d.DEPTNO) INTO cuenta
	FROM DEPT d
	WHERE d.DNAME = NOMBRE;

	IF (cuenta=0) THEN
		RAISE noExisteDept;

	ELSE	
			RESULTADO:=resultado_select;
	END IF;
RETURN RESULTADO;
EXCEPTION
WHEN noExisteDept THEN
	DBMS_OUTPUT.PUT_LINE('No existe el departamento');
WHEN OTHERS THEN
	DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion');

END;

SELECT devolver_sal('ACCOUNTING') FROM DUAL;

--EJERCICIO 3
CREATE OR REPLACE PROCEDURE mostrarAbreviaturas
AS 
	CURSOR C IS 
		SELECT SUBSTR(ENAME,1,3) AS TRESLETRAS
		FROM EMP;
BEGIN 
	FOR registro IN C
	LOOP	
		DBMS_OUTPUT.PUT_LINE('3 primeras letras del empleado: ' || registro.TRESLETRAS);
	END LOOP;
EXCEPTION
WHEN NO_DATA_FOUND THEN
	DBMS_OUTPUT.PUT_LINE('No se han encontrado datos');
WHEN OTHERS THEN
	DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion');

END;


BEGIN
	mostrarAbreviaturas();
END;

--EJERCICIO 4
CREATE OR REPLACE PROCEDURE mostrarEmpleados(NUMERO_DEPT NUMBER)
AS 
	CURSOR C IS 
		SELECT e.ENAME 
		FROM EMP e, DEPT d
		WHERE d.DEPTNO = e.DEPTNO 
		AND d.DEPTNO = NUMERO_DEPT ;

BEGIN 
	FOR registro IN C
	LOOP	
		DBMS_OUTPUT.PUT_LINE('Nombre del empleado: ' || registro.ENAME);
	END LOOP;
EXCEPTION
WHEN NO_DATA_FOUND THEN
	DBMS_OUTPUT.PUT_LINE('No se han encontrado datos');
WHEN OTHERS THEN
	DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion');

END;

BEGIN
	mostrarEmpleados(10);
END;


--EJERCICIO 5
CREATE OR REPLACE PROCEDURE BOLETIN3PSQL.mostrarJefes(NOMBRE_DEPT VARCHAR2)
AS
CURSOR C (NOMBRE_DEPT VARCHAR2)IS 
	SELECT e.ENAME
	FROM EMP e, DEPT d
	WHERE d.DEPTNO = e.DEPTNO 
	AND d.DNAME = NOMBRE_DEPT
	AND MGR IS NOT NULL;
RESULTADO NUMBER:=0;

noExiste EXCEPTION;
BEGIN
	
	SELECT COUNT(DNAME) INTO RESULTADO
	FROM DEPT d 
	WHERE DNAME= NOMBRE_DEPT;
	IF (RESULTADO=0) THEN
	RAISE noExiste;
	
	ELSE
		FOR registro IN C (NOMBRE_DEPT)
		LOOP
			DBMS_OUTPUT.PUT_LINE('Nombre del empleado: ' || registro.ENAME);
		END LOOP;
	END IF;
EXCEPTION
WHEN noExiste THEN
	DBMS_OUTPUT.PUT_LINE('No existe el departamento');
WHEN NO_DATA_FOUND THEN
	DBMS_OUTPUT.PUT_LINE('No se han encontrado datos');
WHEN OTHERS THEN
	DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion');
	
END;

BEGIN
	mostrarJefes('ACCOUING');
END;


--EJERCICIO 6
CREATE OR REPLACE PROCEDURE mostrarEmpleadoYSalario
AS 
	CURSOR C IS 
	SELECT e.EMPNO, e.SAL 
	FROM EMP e
	WHERE e.EMPNO = 7082;
resultado NUMBER:=0;
noExiste EXCEPTION;
BEGIN 
	SELECT COUNT(e.DEPTNO) INTO resultado
	FROM EMP e
	WHERE  e.EMPNO = 7082;
	IF (resultado=0) THEN
	RAISE noExiste;

	ELSE

	FOR registro IN C 
	LOOP
		DBMS_OUTPUT.PUT_LINE('Codigo: ' || registro.EMPNO);
		DBMS_OUTPUT.PUT_LINE('Codigo: ' || registro.EMPNO);

	END LOOP;
	END IF;
EXCEPTION
WHEN noExiste THEN
	DBMS_OUTPUT.PUT_LINE('No existe empleado.');

WHEN NO_DATA_FOUND THEN
	DBMS_OUTPUT.PUT_LINE('No se han encontrado datos');
WHEN OTHERS THEN
	DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion');

	
END;

BEGIN
	mostrarEmpleadoYSalario();
END;

--EJERCICIO 7
CREATE OR REPLACE PROCEDURE hallarNumEmp(NOMBRE_DEPT VARCHAR2)
AS 
	NumeroEmpleado NUMBER:=0;
Dept NUMBER:=0;
Emp NUMBER:=0;
noHayEmpleados EXCEPTION;
noExisteDept EXCEPTION;
BEGIN 
	SELECT COUNT(d2.DEPTNO) INTO Dept
	FROM DEPT d2 
	WHERE d2.DNAME = NOMBRE_DEPT;
	IF (Dept=0) THEN 
	RAISE noExisteDept;
	
	ELSE
		SELECT COUNT(e.EMPNO) INTO Emp
		FROM DEPT d , EMP e
		WHERE d.DEPTNO = e.DEPTNO 
		AND d.DNAME = NOMBRE_DEPT;
		IF (Emp=0) THEN 
			RAISE noHayEmpleados;
		ELSE
			SELECT e.EMPNO  INTO NumeroEmpleado
			FROM DEPT d , EMP e
			WHERE d.DEPTNO = e.DEPTNO 
			AND d.DNAME = NOMBRE_DEPT;
		
			DBMS_OUTPUT.PUT_LINE('El codigo es: ' || NumeroEmpleado);

		END IF;
	END IF;
EXCEPTION
WHEN noHayEmpleados THEN
	DBMS_OUTPUT.PUT_LINE('No se han encontrado empleados');
WHEN noExisteDept THEN
	DBMS_OUTPUT.PUT_LINE('No se han encontrado departamentos');

WHEN NO_DATA_FOUND THEN
	DBMS_OUTPUT.PUT_LINE('No se han encontrado datos');
WHEN OTHERS THEN
	DBMS_OUTPUT.PUT_LINE('Se ha producido una excepcion');
	
END;

BEGIN
	hallarNumEmp('OPERATIONS');
END;

--EJERCICIO 8
CREATE OR REPLACE PROCEDURE devolverNombre





	







